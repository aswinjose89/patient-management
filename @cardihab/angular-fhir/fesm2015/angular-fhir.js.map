{"version":3,"file":"angular-fhir.js.map","sources":["ng://angular-fhir/lib/pipes/age.pipe.ts","ng://angular-fhir/lib/pipes/fhir-coding.pipe.ts","ng://angular-fhir/lib/utils/format.ts","ng://angular-fhir/lib/pipes/fhir-usual-name.pipe.ts","ng://angular-fhir/lib/pipes/observation-value.pipe.ts","ng://angular-fhir/lib/services/regional.service.ts","ng://angular-fhir/lib/services/fhir.service.ts","ng://angular-fhir/lib/loader/loader.component.ts","ng://angular-fhir/lib/services/loader.service.ts","ng://angular-fhir/lib/angular-fhir.module.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({\n  name: 'ageInYears'\n})\nexport class AgePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value || !moment(value).isValid()) { return void 0; }\n    return moment().diff(value, 'years');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fhirCoding'\n})\nexport class FhirCodingPipe implements PipeTransform {\n\n  transform(value: {code: fhir.CodeableConcept}, args?: any): any {\n    if (value && value.code && value.code.coding && value.code.coding.length > 0) {\n      return value.code.coding[0].display;\n    }\n    return '';\n  }\n\n}\n","import moment from 'moment';\n\ninterface INameFormatArgs {\n  noTitle?: boolean;\n  capitaliseLastName?: boolean;\n  firstNameFirst?: boolean;\n}\n\nexport function formatAddress(organisation: fhir.Organization, types?: string[]): string {\n  if (!organisation || !organisation.address ||\n    !Array.isArray(organisation.address) || !organisation.address.length) {\n    return '';\n  }\n\n  types = types || [];\n  let address = organisation.address.find(item => types.indexOf(item.type) > -1);\n  address = address || organisation.address[0];\n\n  const phoneNumber = organisation.telecom.find(item => item.system === 'phone');\n\n  return [\n    `${organisation.name},`,\n    `${address.line.join(' ')},`,\n    address.city,\n    address.state,\n    address.postalCode,\n    phoneNumber\n  ].join(' ');\n}\n\nexport function toValueString(item) {\n  // A hack for pluralising some unit names\n  const formatUnit = (unit, value) => {\n    if (value !== 1) {\n      if (unit === 'serving') {\n        return `${unit}s`;\n      }\n    }\n    return unit;\n  };\n\n  return item.valueString ? item.valueString :\n    item.valueReference ? item.valueReference :\n    item.valueCoding ? item.valueCoding :\n    item.valueUri ? item.valueUri :\n    item.valueBoolean ? item.valueBoolean :\n    item.valueAddress ? item.valueAddress :\n    item.valueAge ? item.valueAge :\n    item.valueAnnotation ? item.valueAnnotation :\n    item.valueAttachment ? item.valueAttachment :\n    item.valueBase64Binary ? item.valueBase64Binary :\n    item.valueCode ? item.valueCode :\n    item.valueCodeableConcept ? item.valueCodeableConcept :\n    item.valueContactPoint ? item.valueContactPoint :\n    item.valueCount ? item.valueCount :\n    item.valueDate ? item.valueDate :\n    item.valueDecimal ? item.valueDecimal :\n    item.valueDuration ? item.valueDuration :\n    item.valueHumanName ? item.valueHumanName :\n    item.valueId ? item.valueId :\n    item.valueDateTime ? item.valueDateTime :\n    item.valueDistance ? item.valueDistance :\n    item.valueInteger ? item.valueInteger :\n    // todo add additional value[x] types\n    item.valueQuantity ? `${item.valueQuantity.value} ${formatUnit(item.valueQuantity.unit, item.valueQuantity.value)}` : '';\n}\n\n// tslint:disable-next-line:max-line-length\nexport function formatFhirName(value: fhir.HumanName[], args: INameFormatArgs = {noTitle: false, capitaliseLastName: false, firstNameFirst: false}) {\n  if (value && value.length > 0) {\n    const preferredName = value.reduce((best, name, idx, names) => {\n      if (name.use === 'usual') {\n        return name;\n      } else if (!best) {\n        return name;\n      } else {\n        if (name.use === 'official') {\n          return name;\n        }\n      }\n      return best;\n    });\n    if (preferredName.text) {\n      return preferredName.text;\n    }\n\n    const family = (args.capitaliseLastName ? preferredName.family.toUpperCase() : preferredName.family) || '';\n    const titles = (preferredName.prefix || []).length > 0 ? ` (${(preferredName.prefix || []).join(' ')})` : '';\n    // tslint:disable-next-line:max-line-length\n    return args.firstNameFirst ? `${args.noTitle ? '' : titles} ${(preferredName.given || [])[0]} ${family}` : `${family}, ${(preferredName.given || [])[0]}${args.noTitle ? '' : titles}`;\n  } else {\n    return '<No Name>';\n  }\n}\n\nexport function formatDOB(date: string, includeAge: boolean = false) {\n  const mDate = moment(date);\n  const age = ` (${moment().diff(mDate, 'years')} ys)`;\n  return `${mDate.format('DD-MMM-YYYY')}${includeAge ? age : ''}`;\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatFhirName } from '../utils/format';\n\n@Pipe({\n  name: 'fhirUsualName'\n})\nexport class FhirUsualNamePipe implements PipeTransform {\n\n  transform(value: fhir.HumanName[], args?: any): any {\n    return formatFhirName(value, args);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FhirCodingPipe } from './fhir-coding.pipe';\nimport { toValueString } from '../utils';\n\n@Pipe({\n  name: 'observationValue'\n})\nexport class ObservationValuePipe implements PipeTransform {\n  constructor() {}\n\n  transform(observation: fhir.Observation, args?: any): any {\n    const multi = (observation.component || []).length > 1;\n    return (observation.component || [])\n    .map(component => {\n      return `${multi ? new FhirCodingPipe().transform(component) + ':' : ''}${toValueString(component)}`;\n    }).join(', ');\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface AnyConfig {\n    [key: string]: any;\n}\n\n@Injectable()\nexport class RegionalConfigService implements AnyConfig {\n\n  async load(region): Promise<any> {\n    // assert that region is one of ['au', 'de', 'us']\n\n    const configResponse = await fetch(`./assets/environment-${region}.json`);\n    const config: any = await configResponse.json();\n\n    Object.keys(config).forEach(key => {\n      Object.defineProperty(this, key, {\n        get: () => config[key]\n      });\n    });\n    return config;\n  }\n\n  get(key) {\n    return this[key];\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable, throwError, ReplaySubject, of } from 'rxjs';\nimport { map, tap, expand, reduce } from 'rxjs/operators';\nimport { LRUMap } from 'lru_map';\nimport * as url from 'url';\nimport { RegionalConfigService } from './regional.service';\n\nexport interface IFhirResponse<T extends fhir.Resource> {\n  resourceType: string;\n  id: string;\n  meta: {\n    lastUpdated: string;\n  };\n  type: string;\n  total: number;\n  link: {\n    relation: string,\n    url: string;\n  }[];\n  entry: {\n    fullUrl: string;\n    resource: T;\n    search: {\n      mode: string;\n    };\n  }[];\n}\n\nexport interface IFhirSearchParams {\n  nextUrl?: string;\n  _count?: string;\n  _sort?: string;\n  _getpagesoffset?: string;\n  [param: string]: string | string[];\n}\n\n@Injectable()\nexport class FhirService {\n\n  static EXTENSIONS = {\n    TASK_ENABLE_WHEN: 'https://fhir-registry.cardihab.com/StructureDefiniton/TaskEnableWhen',\n    EDUCATION_TASK: 'https://fhir-registry.cardihab.com/StructureDefiniton/EducationTask',\n    ADHERENCE: 'https://fhir-registry.cardihab.com/StructureDefiniton/Adherence',\n    RECURRING_TASK: 'https://fhir-registry.cardihab.com/StructureDefiniton/RecurringTask',\n    BASED_ON_GOAL: 'https://fhir-registry.cardihab.com/StructureDefiniton/BasedOnGoal',\n    PATIENT_SPECIFIC_REMINDER: 'https://fhir-registry.cardihab.com/StructureDefiniton/PatientSpecificReminder',\n    ORGANIZATION_ATTRIBUTES: 'https://fhir-registry.cardihab.com/StructureDefiniton/OrganizationAttributes'\n  };\n\n  static IDENTIFIER_SYSTEMS = {\n    SITECODE: 'urn:sitecode',\n    FHIR_IDENTIFIER_TYPE: 'http://hl7.org/fhir/identifier-type',\n    SNOMED: 'http://snomed.info/sct',\n    GOAL_CATEGORY: 'http://hl7.org/fhir/goal-category',\n    TENANCY_SECURITY_SYSTEM: 'Tenancy'\n  };\n\n\n  // set by auth guard. Fixme cleaner separation would be nice\n  public base = this.config.get('fhir');\n  public tenancy = 'baseDstu3';\n\n  private refCache = new LRUMap<string, any>(100);\n\n  static hasCoding(concept: fhir.CodeableConcept, codes) {\n    if (concept && concept.coding && codes) {\n      for (const code of concept.coding) {\n        if (code.code && codes.find(ia => ia.system === code.system && ia.code === code.code) != null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  static referenceToId(reference: fhir.Reference): { resourceType: string, id: string } {\n    const [resourceType, id] = (reference || { reference: '' }).reference.split('/');\n    return {\n      resourceType,\n      id\n    };\n  }\n\n  static flattenExtension<T>(extension: fhir.Extension): T | any {\n    const obj = {};\n    if (extension.extension) {\n      extension.extension.forEach(ext => {\n        obj[ext.url] = FhirService.flattenExtension(ext);\n      });\n    } else {\n      return extension.valueString ? extension.valueString :\n        extension.valueReference ? extension.valueReference :\n          extension.valueCoding ? extension.valueCoding :\n            extension.valueUri ? extension.valueUri :\n              extension.valueBoolean ? extension.valueBoolean :\n                extension.valueAddress ? extension.valueAddress :\n                  extension.valueAge ? extension.valueAge :\n                    extension.valueAnnotation ? extension.valueAnnotation :\n                      extension.valueAttachment ? extension.valueAttachment :\n                        extension.valueBase64Binary ? extension.valueBase64Binary :\n                          extension.valueCode ? extension.valueCode :\n                            extension.valueCodeableConcept ? extension.valueCodeableConcept :\n                              extension.valueContactPoint ? extension.valueContactPoint :\n                                extension.valueCount ? extension.valueCount :\n                                  extension.valueDate ? extension.valueDate :\n                                    extension.valueDecimal ? extension.valueDecimal :\n                                      extension.valueDuration ? extension.valueDuration :\n                                        extension.valueHumanName ? extension.valueHumanName :\n                                          extension.valueId ? extension.valueId :\n                                            extension.valueDateTime ? extension.valueDateTime :\n                                              extension.valueDistance ? extension.valueDistance :\n                                                extension.valueInteger ? extension.valueInteger :\n                                                  // todo add additional value[x] types\n                                                  null;\n    }\n    return obj;\n  }\n\n  constructor(private http: HttpClient, private config: RegionalConfigService) { }\n\n  getUrl(tenancyOverride?: string): string {\n    return `${this.base}/${tenancyOverride ? tenancyOverride : this.tenancy}`;\n  }\n\n  setUrl(newUrl: string) {\n    this.base = newUrl;\n  }\n\n  options(): HttpHeaders {\n    return new HttpHeaders({ Accept: 'application/json' });\n  }\n\n  nextPage<T>(response: IFhirResponse<T>): Observable<IFhirResponse<T>> {\n    if (response) {\n      const nextLink = (response.link || []).find(l => l.relation === 'next');\n      if (nextLink) {\n        return this.http.get<IFhirResponse<T>>(nextLink.url);\n      }\n    }\n\n    return throwError(new Error('No next link to follow'));\n  }\n\n  reference<T>(ref: fhir.Reference, context: fhir.DomainResource): Observable<T> {\n    if (ref && ref.reference) {\n      const absoluteUri = this.referenceToAbsoluteUrl(ref, context);\n      let ref$ = this.refCache.get(absoluteUri);\n\n      // TODO handle contained resource references\n      if (absoluteUri.startsWith('#')) {\n        return throwError(new Error(`Don't yet support contained references`));\n\n      } else {\n        if (!ref$) {\n          ref$ = new ReplaySubject<T>(1);\n          this.http.get<T>(absoluteUri)\n            .subscribe(ref$);\n          this.refCache.set(absoluteUri, ref$);\n        }\n        return ref$;\n      }\n    } else {\n      return throwError(new Error('Invalid reference'));\n    }\n  }\n\n  get<T extends fhir.Resource>(resourceType: string, id: string, tenancy?: string): Observable<T> {\n    if (id === 'new') {\n      return of(null);\n    } else {\n      return this.http.get<T>(`${this.getUrl(tenancy)}/${resourceType}/${id}`);\n    }\n  }\n\n  search<T extends fhir.Resource>(\n    resourceType: string,\n    params: any,\n    options?: { tenancy?: string, headers?: any }\n  ): Observable<IFhirResponse<T>> {\n    const requestOptions: { params: any, headers?: any } = { params };\n    if (options && options.headers) {\n      requestOptions.headers = options.headers;\n    }\n    return this.http.get<IFhirResponse<T>>(`${this.getUrl((options || {}).tenancy)}/${resourceType}`, requestOptions);\n  }\n\n  patch(resourceUrl, cmd, options?: { tenancy?: string, headers?: any }): Observable<any> {\n    const requestOptions: { params?: any, headers?: any } = {\n      headers: {\n        'content-type': 'application/json-patch+json'\n      }\n    };\n    if (options && options.headers) {\n      Object.assign(requestOptions.headers, options.headers);\n    }\n    return this.http.patch(resourceUrl, cmd, requestOptions);\n  }\n\n  delete(resourceType, id, options?: {tenancy?: string, headers?: any}) {\n    const requestOptions: { params?: any, headers?: any } = { };\n    if (options && options.headers) {\n      requestOptions.headers = options.headers;\n    }\n    return this.http.delete(`${this.getUrl((options || {}).tenancy)}/${resourceType}/${id}`, requestOptions);\n  }\n\n  save<T extends fhir.Resource>(bundle: T, options?: { tenancy?: string, headers?: any }): Observable<T> {\n    if (bundle.resourceType === 'Bundle') {\n      return this.http.post<T>(`${this.getUrl((options || {}).tenancy)}`, bundle, {\n        headers: {\n          'content-type': 'application/fhir+json',\n          Prefer: 'return=representation'\n        }\n      }).pipe(\n        tap(bundleResponse => {\n          ((bundleResponse as fhir.Bundle).entry || []).forEach((v: fhir.BundleEntry, k) => {\n            if ((bundle as fhir.Bundle).entry[k]) {\n              (bundle as fhir.Bundle).entry[k].resource.id = v.resource.id;\n            }\n          });\n        })\n      );\n    } else {\n      return this.saveAll([bundle], options)\n        .pipe(\n          map(bundleResponse => bundleResponse.entry[0].resource as T)\n        );\n    }\n  }\n\n  saveAll(resources: fhir.Resource[], options?: { tenancy?: string, headers?: any }): Observable<fhir.Bundle> {\n\n    const bundleEntries = resources.map(p => {\n      return {\n        request: {\n          method: p.id ? 'PUT' : 'POST',\n          // tslint:disable-next-line:no-string-literal\n          url: p.id ? `${p.resourceType}/${p.id}` : (p['identifier'] || [])[0] ? `urn:uuid:${p['identifier'][0].value}` : p.resourceType\n        },\n        resource: p\n      };\n    });\n\n    return this.save<fhir.Bundle>({\n      resourceType: 'Bundle',\n      type: 'transaction',\n      entry: bundleEntries\n    }, options);\n  }\n\n  resolveReferences<T extends fhir.DomainResource>(\n    references: fhir.Reference[],\n    context: fhir.DomainResource,\n    count: number = 500\n  ): Observable<fhir.Bundle> {\n    if (!references || !Array.isArray(references) || !references.length) {\n      return of({} as fhir.Bundle);\n    }\n\n    const { resourceType } = FhirService.referenceToId(references[0]);\n    const ids = references.map(ref => FhirService.referenceToId(ref).id);\n\n    return this.http.post<IFhirResponse<T>>(`${this.getContextBaseUrl(context)}/${resourceType}/_search`,\n      `_id=${ids.join(',')}&_count=${count}`,\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      })\n      .pipe(\n        expand((res) => {\n          const foundNext = (res.link.find(l => l.relation === 'next') || {} as any).url;\n          if (foundNext) {\n            return this.http.get<IFhirResponse<fhir.Bundle>>(url.format(url.parse(foundNext, true)));\n          }\n          return of();\n        }),\n        reduce((acc: fhir.Bundle, value: fhir.Bundle) => {\n          if (acc.entry && value.entry) {\n            acc.entry = acc.entry.concat(value.entry);\n          }\n          return acc;\n        })\n      );\n  }\n\n  referenceToAbsoluteUrl(ref: fhir.Reference, context: fhir.Resource): string {\n    const refUrl = url.parse(ref.reference);\n    if (refUrl.hash && !refUrl.protocol) { // don't touch contained resource references\n      return ref.reference;\n    }\n    const base = this.getContextBaseUrl(context);\n    return url.resolve(`${base}/`, ref.reference);\n  }\n\n  getContextBaseUrl(context?: fhir.Resource) {\n    let base = this.getUrl();\n    if (context && context.meta && context.meta.security) {\n      const tenancyTag = context.meta.security.find(sec => sec.system === FhirService.IDENTIFIER_SYSTEMS.TENANCY_SECURITY_SYSTEM);\n      if (tenancyTag) {\n        base = this.getUrl(tenancyTag.display);\n      }\n    }\n    return base;\n  }\n}\n","import { Component, Inject, Optional, InjectionToken } from '@angular/core';\n\nexport const CONTAINER_DATA = new InjectionToken<any>('CONTAINER_DATA');\n@Component({\n  selector: 'lib-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n\n  message: string;\n\n  constructor(@Optional() @Inject(CONTAINER_DATA) private componentData: any) {\n    this.message = this.componentData && this.componentData.message\n      ? this.componentData.message : '';\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { LoaderComponent, CONTAINER_DATA } from '../loader/loader.component';\n\n@Injectable()\nexport class LoaderService {\n\n  overlayRef: OverlayRef;\n  overlayConfig: OverlayConfig = new OverlayConfig();\n\n  constructor(private overlay: Overlay, private injector: Injector) {\n    this.overlayConfig.positionStrategy = this.overlay.position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n    this.overlayConfig.hasBackdrop = true;\n  }\n\n  start(message: string = '') {\n    this.overlayRef = this.overlay.create(this.overlayConfig);\n    const containerPortal = new ComponentPortal(LoaderComponent, null, this.createInjector({\n      message\n    }));\n    this.overlayRef.attach(containerPortal);\n  }\n\n  stop() {\n    this.overlayRef.dispose();\n  }\n\n  private createInjector(dataToPass: {}): PortalInjector {\n    const injectorTokens = new WeakMap();\n    injectorTokens.set(CONTAINER_DATA, dataToPass);\n    return new PortalInjector(this.injector, injectorTokens);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FhirCodingPipe, FhirUsualNamePipe, ObservationValuePipe, AgePipe } from './pipes';\nimport { FhirService } from './services/fhir.service';\nimport { RegionalConfigService } from './services/regional.service';\nimport { LoaderComponent } from './loader/loader.component';\nimport { LoaderService } from './services/loader.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    FhirCodingPipe,\n    FhirUsualNamePipe,\n    AgePipe,\n    ObservationValuePipe,\n    LoaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FhirCodingPipe,\n    FhirUsualNamePipe,\n  ],\n  providers: [\n    FhirService,\n    RegionalConfigService,\n    LoaderService\n  ]\n})\nexport class AngularFhirModule { }\n"],"names":["url.format","url.parse","url.resolve"],"mappings":"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"}
